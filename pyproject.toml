[tool.poetry]
name = "brick_manager"
version = "0.0.1"
description = "Tool for managing my Brick Collection"
authors = ["Holger Kornhaas <Holger@Kornhaas.net>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
flask = "^3.0.3"
requests = "^2.32.3"
pillow = "^10.4.0"
reportlab = "^4.2.2"
flask-sqlalchemy = "^3.1.1"
flask-migrate = "^4.0.7"
flask-script = "^2.0.6"
apscheduler = "^3.10.4"
pandas = "^2.3.3"
cryptography = "^46.0.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pylint = "^3.2.6"
flask-testing = "^0.8.1"
vulture = "^2.14"
pytest-cov = "^5.0.0"
coverage = "^7.6.1"
black = "^23.12.1"
isort = "^5.13.2"
flake8 = "^7.0.0"
bandit = "^1.7.5"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
flake8-docstrings = "^1.7.0"
flake8-import-order = "^0.18.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
source = ["brick_manager"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/instance/*",
    "*/static/*",
    "*/templates/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = ["migrations"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "migrations/",
    "tests/",
]

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101"]  # Skip assert_used test

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "migrations",
    ".venv",
    "build",
    "dist"
]
